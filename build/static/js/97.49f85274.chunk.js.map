{"version":3,"file":"static/js/97.49f85274.chunk.js","mappings":"6QAoFA,QAtEA,WACI,MAAM,EAACA,EAAC,KAAEC,IAAQC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,MAEXC,GADWC,EAAAA,EAAAA,MACOC,OACjBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAqBvC,OAnBAG,EAAAA,EAAAA,YAAU,KACNC,OAAOC,OAAO,EAAG,GACjBH,GAAW,GACXI,EAAAA,EACKC,IAAI,gBAADC,OAAiBb,EAAM,MAC1Bc,MAAMC,IACHX,EAAYW,EAAIC,MAChBT,GAAW,EAAM,IAEpBU,OAAOC,IACJC,QAAQC,IAAIF,GACZX,GAAW,EAAM,GACnB,GACP,CAACP,KAOAqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACVD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,KACXF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0BAAyBJ,SACnCjB,GACGkB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBJ,UAACC,EAAAA,EAAAA,KAACI,EAAAA,EAAgB,MAE3C,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,KAAI,CAACC,EAAMC,KACjBV,EAAAA,EAAAA,MAAA,OAAKM,UAAU,gBAAeJ,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OACIG,UAAU,uBACVK,MAAO,CAAEC,gBAAgB,OAADpB,OAASiB,EAAKI,eAAe,GAAGC,IAAG,MAAMZ,UAEjEF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sBAAqBJ,SAAA,EAChCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,EAAKM,SACTZ,EAAAA,EAAAA,KAAA,KAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAAA,EAAiB,CAACC,KAAMR,EAAKS,qBAI1Cf,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBJ,UACjCC,EAAAA,EAAAA,KAAA,KACIgB,QAASA,KA3BzC,IAAqBC,IA2BwCX,EAAKW,GA1B9D3C,EAAS,YAAa,CAAEI,MAAOuC,GA0BkC,EACrCC,wBAAyB,CAAEC,OAAQC,IAAAA,SACb,OAAlBhD,EAAKiD,SACLf,EAAKgB,eACa,OAAlBlD,EAAKiD,SACLf,EAAKiB,eACa,OAAlBnD,EAAKiD,SACLf,EAAKkB,eAAe,aArBAjB,QA6BhDP,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,MAGnB,C,+CCtEA,QAZA,SAA0BC,GAAU,IAAT,KAACZ,GAAKY,EAC7B,MAAMC,EAAU,IAAIC,KAAKd,GACnBe,EAAOF,EAAQG,cACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAMN,EAAQO,UACdC,EAAQR,EAAQS,WAChBC,EAAUV,EAAQW,aAClBC,EAAa,GAAAlD,OAAM4C,EAAG,KAAA5C,OAAI0C,EAAK,KAAA1C,OAAIwC,EAAI,OAAAxC,OAAM8C,EAAK,KAAA9C,OAAIgD,GAE9D,OAAOrC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAGwC,GACZ,C","sources":["pages/List/List.jsx","utils/HumanReadableDate.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport InfoPanel from '../../components/Info/InfoPanel';\nimport Navigation from '../../components/Navigation/Navigation';\nimport '../../App.css';\nimport Footer from '../../components/Footer/Footer';\nimport './List.css';\nimport { useLocation } from 'react-router-dom';\nimport { axiosInstance } from '../../utils/axiosInstance';\nimport { useNavigate } from 'react-router-dom';\nimport HumanReadableDate from '../../utils/HumanReadableDate';\nimport DOMPurify from \"dompurify\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useTranslation } from 'react-i18next';\n\nfunction List() {\n    const {t, i18n} = useTranslation()\n    const navigate = useNavigate();\n    const location = useLocation();\n    const typear = location.state;\n    const [articles, setArticles] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        window.scroll(0, 0);\n        setLoading(true);\n        axiosInstance\n            .get(`articles/via/${typear}/`)\n            .then((res) => {\n                setArticles(res.data);\n                setLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n            });\n    }, [typear]);\n\n    function handleClick(id) {\n        navigate('/article/', { state: id });\n    }\n\n    return (\n        <>\n            <InfoPanel />\n            <Navigation />\n            <div className=\"list__wrapper container\">\n                {loading ? (\n                    <div className=\"loading__spinner\"><CircularProgress /></div>\n                ) : (\n                    articles?.map((item, index) => (\n                        <div className=\"article__card\" key={index}>\n                            <div\n                                className=\"article__card__image\"\n                                style={{ backgroundImage: `url(${item.images_for_web[0].src})` }}\n                            >\n                                <div className=\"article__card__date\">\n                                    <p>{item.views}</p>\n                                    <p>\n                                        <HumanReadableDate date={item.created_at} />\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"article__card__title\">\n                                <p\n                                    onClick={() => { handleClick(item.id); }}\n                                    dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(\n                                        i18n.language === 'tm'?\n                                        item.description_tm:\n                                        i18n.language === 'en'?\n                                        item.description_en:\n                                        i18n.language === 'ru'?\n                                        item.description_ru:null\n                                        ) }}\n                                ></p>\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n            <Footer />\n        </>\n    );\n}\n\nexport default List;\n","function HumanReadableDate({date}) {\n    const dateObj = new Date(date);\n    const year = dateObj.getFullYear();\n    const month = dateObj.getMonth() + 1; \n    const day = dateObj.getDate();\n    const hours = dateObj.getHours();\n    const minutes = dateObj.getMinutes();\n    const formattedDate = `${day}.${month}.${year} - ${hours}:${minutes}`;\n\n  return <>{formattedDate}</>;\n}\n\nexport default HumanReadableDate"],"names":["t","i18n","useTranslation","navigate","useNavigate","typear","useLocation","state","articles","setArticles","useState","loading","setLoading","useEffect","window","scroll","axiosInstance","get","concat","then","res","data","catch","err","console","log","_jsxs","_Fragment","children","_jsx","InfoPanel","Navigation","className","CircularProgress","map","item","index","style","backgroundImage","images_for_web","src","views","HumanReadableDate","date","created_at","onClick","id","dangerouslySetInnerHTML","__html","DOMPurify","language","description_tm","description_en","description_ru","Footer","_ref","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","formattedDate"],"sourceRoot":""}